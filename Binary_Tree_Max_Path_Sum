/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
 private int max;

    public int helper(TreeNode node){
        if(node == null)
            return 0;

        int left_sum = Math.max(0,helper(node.left));
        int right_sum =  Math.max(0,helper(node.right));

        max = Math.max(max, left_sum + right_sum + node.val);

        return Math.max(left_sum, right_sum) + node.val;
    }

    public int maxPathSum(TreeNode root) {
        max = Integer.MIN_VALUE;
        helper(root);
        return max;
    }
}
